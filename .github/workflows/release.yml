name: Release fget

on:
  push:
    branches:
      - "main"
    tags:
      - "v*"

jobs:
  build:
    name: Build fget binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact: fget-linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact: fget-windows-x86_64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build fget binary
        working-directory: native
        run: cargo build --release --target ${{ matrix.target }}

      - name: Rename and copy binary
        shell: bash
        run: |
          mkdir dist
          cp native/target/${{ matrix.target }}/release/fget dist/${{ matrix.artifact }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact }}
          path: dist/${{ matrix.artifact }}

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./dist

      - name: Publish GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: ./dist/**/*  # Upload all binaries
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
